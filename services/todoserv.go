package services

import (
	"database/sql"
	"fmt"
	//"github.com/jmoiron/sqlx"
	_ "github.com/lib/pq"
)

//var schema= 'CREATE TABLE Todos(
//id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
//todo  text NOT NULL
//)'



type Todo struct{
	todo []string
}
type TodoTmp struct{
	id int
	todo string
}

func (todo *Todo)Create(s string){
	ifExist:=true
	for _,t:=range GetAll(){
		if s==t {
			ifExist=false
			fmt.Println("Such todo is already exist in todoList")
			break
		}
	}
	if ifExist{
		connStr := "user=postgres password=rose20 dbname=postgres sslmode=disable"
		db, err := sql.Open("postgres", connStr)
		if err != nil {
			panic(err)
		}
		defer db.Close()

		db.Exec("insert into todos (todo) values ($1)",s)
		if err != nil{
			panic(err)
		}
		fmt.Println("Created: ",s)
	}
}

func (todo *Todo)ShowAll(){
	fmt.Println(todo.todo)
}

func (todo *Todo)GetAll()[]string{
	connStr := "user=postgres password=rose20 dbname=postgres sslmode=disable"
	db, err := sql.Open("postgres", connStr)
	if err != nil {
		panic(err)
	}
	defer db.Close()

	rows,err:=db.Query("select * from todos")
	if err != nil {
		panic(err)
	}
	for rows.Next(){
		t := TodoTmp{}
		err := rows.Scan(&t.id,&t.todo)
		if err != nil{
			fmt.Println(err)
			continue
		}
		todo.todo = append(todo.todo, t.todo)
	}
	return todo.todo
}

func (todo *Todo)ClearAllDb(){
	connStr := "user=postgres password=rose20 dbname=postgres sslmode=disable"
	db, err := sql.Open("postgres", connStr)
	if err != nil {
		panic(err)
	}
	defer db.Close()
	db.Exec("delete from todos")
}

func GetAll()[]string{
	connStr := "user=postgres password=rose20 dbname=postgres sslmode=disable"
	db, err := sql.Open("postgres", connStr)
	if err != nil {
		panic(err)
	}
	defer db.Close()

	rows,err:=db.Query("select * from todos")
	if err != nil {
		panic(err)
	}
	var tmp []string
	for rows.Next(){
		t := TodoTmp{}
		err := rows.Scan(&t.id,&t.todo)
		if err != nil{
			fmt.Println(err)
			continue
		}

		tmp= append(tmp, t.todo)
	}
	return tmp
}